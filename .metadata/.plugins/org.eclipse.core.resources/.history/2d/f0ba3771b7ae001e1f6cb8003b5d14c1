package step12;

import java.io.*;
import java.util.*;

public class no1018 {

	static int N;
	static int M;
	public static void main(String[] args) throws IOException {
		// 체스판 다시 칠하기
		// 체스판을 만드는 모든 경우를 시도하여 최적의 방법을 찾는 문제
		
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		StringTokenizer st = new StringTokenizer(br.readLine(), " ");
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		
		String[] arr = new String[N];
		
		for (int i = 0; i < N; i++) {
			arr[i] = br.readLine();
		}
		
	}
	
	public static int count(String[] arr) {
		int result = Integer.MAX_VALUE;
		
		for (int i = 0; i < N - 7; i++) {
			for (int j = 0; j < M - 7; j++) {
				for (int k = 0; k < 2; k++) {
					char start = k == 0 ? 'W' : 'B';
					
					int count = 0;
					for (int n = i; n < i + 8; n++) {
						for (int m = j; m < j + 8; m++) {
							if (start != arr[n].charAt(m)) {
								count++;
							}
							
							start = start == 'W' ? 'B' : 'W';
							
						}
						
						start = start == 'W' ? 'B' : 'W';
						
					}
					
					result = Math.min(result, count);
					
					if (result == 0) {
						return 0;
					}
				}
			}
		}
		
		return result;
		
	}
}
